{"version":3,"sources":["components/ScrollToTop/ScrollToTop.tsx","reportWebVitals.ts","models/Shape.ts","components/Loader/Loader.tsx","components/Button/Button.tsx","components/Logo/Logo.tsx","components/Navigation/Navigation.tsx","components/Navigation/MobileNavigationSlider.tsx","util/Case.ts","components/Shape/Shape.tsx","components/ShapeCard/ShapeCard.tsx","components/Library/LibraryCards.tsx","components/Pod/Pod.tsx","components/Preview/RelatedShapes.tsx","components/Preview/Preview.tsx","components/CopyToClipboardButton/CopyToClipboardButton.tsx","components/InfoBox/InfoBox.tsx","components/CodeSnippet/CodeSnippet.tsx","components/Snippets/Snippets.tsx","components/Panels/Panels.tsx","components/Library/SearchInput.tsx","components/Library/Library.tsx","components/Download/DownloadCheckbox.tsx","components/Download/DownloadButton.tsx","constants/comments/index.ts","components/Download/DownloadSnippets.tsx","components/Download/Download.tsx","components/About/About.tsx","components/Footer/Footer.tsx","App.tsx","index.tsx"],"names":["ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Shape","name","html","css","scss","scssMixinUsesMultiplier","group","shapes","this","filter","shape","Loader","className","icon","faSpinner","size","pulse","Button","props","onClick","text","ButtonRouterLink","to","faIcon","ButtonLink","conditionalAttributes","target","rel","href","url","Logo","Navigation","replace","exact","activeClassName","faGithub","faIconSize","mobileNavOpen","type","onHamburgerClick","MobileNavigation","isOpen","onClose","Case","kebab","str","match","map","x","toLowerCase","join","markup","__html","dangerouslySetInnerHTML","ShapeCard","LibraryCards","cards","term","length","slice","includes","Pod","children","RelatedShapes","shapeCards","Preview","relatedShapes","CopyToClipboardButton","notificationEl","useRef","onCopy","result","current","textContent","classList","add","setTimeout","remove","xmlns","width","height","viewBox","d","ref","InfoBox","faInfoCircle","CodeSnippet","prismEl","Prism","highlightElement","title","code","prismLanguage","Snippets","Panels","id","useParams","useState","setShape","matchedShape","find","s","getRelatedShapes","faArrowLeft","SearchInput","placeholder","autoComplete","value","onChange","event","onTermChange","htmlFor","Library","path","useRouteMatch","searchTerm","setSearchTerm","DownloadCheckbox","checked","DownloadButton","buttonText","content","filename","contentType","a","document","createElement","file","Blob","URL","createObjectURL","download","click","revokeObjectURL","downloadToFile","DownloadSnippets","htmlSnippet","htmlComment","cssSnippet","cssComment","scssSnippet","Download","selectedShapes","setSelectedShapes","handleCheckboxChange","existingIndex","findIndex","selectedShape","checkboxes","About","Footer","faLinkedin","faGithubSquare","App","setMobileNavOpen","setShapes","loading","setLoading","fetch","response","json","plainToClass","console","error","handleMobileNavToggle","fetchShapes","ReactDOM","render","StrictMode","getElementById"],"mappings":"unBAGe,SAASA,IAAe,IAC7BC,EAAaC,cAAbD,SAMR,OAJAE,qBAAU,WACRC,OAAOC,SAAS,EAAG,KAClB,CAACJ,IAEG,KCRT,IAYeK,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,iECYCQ,E,WApBb,WACSC,EACAC,EACAC,EACAC,GAGN,IAFMC,EAEP,wDADOC,EACP,gEANOL,OAMP,KALOC,OAKP,KAJOC,MAIP,KAHOC,OAGP,KAFOC,0BAEP,KADOC,Q,oDAGT,SAAiBC,GAA2B,IAAD,OACzC,OAAKC,KAAKF,MAEHC,EAAOE,QAAO,SAACC,GACpB,OACEA,EAAMJ,OAASI,EAAMJ,QAAU,EAAKA,OAASI,EAAMT,OAAS,EAAKA,QAJ7C,O,mCCGbU,EARU,WACvB,OACE,qBAAKC,UAAU,SAAf,SACE,cAAC,IAAD,CAAiBC,KAAMC,IAAWC,KAAK,KAAKC,OAAO,O,gBCmB5CC,G,MAAgC,SAACC,GAC5C,OACE,wBACEN,UAAS,iBAAYM,EAAMN,UAAYM,EAAMN,UAAY,IACzDO,QAASD,EAAMC,QAFjB,SAIGD,EAAME,SAKAC,EAAoD,SAACH,GAChE,OACE,eAAC,IAAD,CACEI,GAAIJ,EAAMI,GACVV,UAAS,iBAAYM,EAAMN,UAAYM,EAAMN,UAAY,IAF3D,UAIGM,EAAME,KACNF,EAAMK,OAAS,cAAC,IAAD,CAAiBV,KAAMK,EAAMK,SAAa,OAKnDC,EAAwC,SAACN,GACpD,IAAMO,EAA0C,GAMhD,OAJIP,EAAMQ,QAA2B,WAAjBR,EAAMQ,SACxBD,EAAsBE,IAAM,cAI5B,4CACEf,UAAS,iBAAYM,EAAMN,UAAYM,EAAMN,UAAY,IACzDgB,KAAMV,EAAMW,IACZH,OAAQR,EAAMQ,QACVD,GAJN,cAMGP,EAAME,KACNF,EAAMK,OAAS,cAAC,IAAD,CAAiBV,KAAMK,EAAMK,SAAa,QCrDjDO,G,MATQ,WACrB,OACE,uBAAMlB,UAAU,OAAhB,UACE,sBAAMA,UAAU,YAAhB,iBACA,sBAAMA,UAAU,eAAhB,yBCyESmB,G,YAjE+B,SAACb,GAC7C,OACE,mCACE,sBAAKN,UAAU,aAAf,UACE,cAAC,IAAD,CAASoB,SAAO,EAACV,GAAG,WAAWV,UAAU,mBAAzC,SACE,cAAC,EAAD,MAGF,sBAAKA,UAAU,mBAAf,UACE,cAAC,IAAD,CACEoB,SAAO,EACPC,OAAK,EACLX,GAAG,SACHV,UAAU,mBACVsB,gBAAgB,YALlB,mBASA,cAAC,IAAD,CACEF,SAAO,EACPV,GAAG,WACHV,UAAU,mBACVsB,gBAAgB,YAJlB,qBAQA,cAAC,IAAD,CACEF,SAAO,EACPC,OAAK,EACLX,GAAG,YACHV,UAAU,mBACVsB,gBAAgB,YALlB,yBAWF,qBAAKtB,UAAU,oBAAf,SACE,cAAC,EAAD,CACEQ,KAAK,iBACLS,IAAI,4CACJH,OAAO,SACPH,OAAQY,IACRC,WAAW,SAIf,qBAAKxB,UAAU,wBAAf,SACE,wBACEA,UAAS,sCACPM,EAAMmB,cAAgB,YAAc,IAEtCC,KAAK,SACLnB,QAASD,EAAMqB,iBALjB,SAOE,sBAAM3B,UAAU,gBAAhB,SACE,sBAAMA,UAAU,iCCuBf4B,G,MAjF2C,SAACtB,GACzD,OACE,qCACE,qBACEN,UAAS,oCACPM,EAAMuB,OAAS,YAAc,MAIjC,sBAAK7B,UAAS,4BAAuBM,EAAMuB,OAAS,YAAc,IAAlE,UACE,sBAAK7B,UAAU,4BAAf,UACE,cAAC,EAAD,IAEA,wBACEA,UAAU,iEACV0B,KAAK,SACLnB,QAASD,EAAMwB,QAHjB,SAKE,sBAAM9B,UAAU,gBAAhB,SACE,sBAAMA,UAAU,2BAKtB,qBAAIA,UAAU,2BAAd,UACE,oBAAIA,UAAU,0BAAd,SACE,cAAC,IAAD,CACEoB,SAAO,EACPC,OAAK,EACLX,GAAG,SACHV,UAAU,0BACVsB,gBAAgB,YAChBf,QAASD,EAAMwB,QANjB,qBAYF,oBAAI9B,UAAU,0BAAd,SACE,cAAC,IAAD,CACEoB,SAAO,EACPC,OAAK,EACLX,GAAG,WACHV,UAAU,0BACVsB,gBAAgB,YAChBf,QAASD,EAAMwB,QANjB,uBAYF,oBAAI9B,UAAU,0BAAd,SACE,cAAC,IAAD,CACEoB,SAAO,EACPC,OAAK,EACLX,GAAG,YACHV,UAAU,0BACVsB,gBAAgB,YAChBf,QAASD,EAAMwB,QANjB,2BAaJ,oBAAI9B,UAAU,iCAEd,qBAAKA,UAAU,6BAAf,SACE,cAAC,EAAD,CACEQ,KAAK,iBACLS,IAAI,4CACJH,OAAO,SACPH,OAAQY,IACRC,WAAW,iBCvFjBO,E,kCAAAA,EACGC,MAAQ,SAACC,GACd,OAAIA,EACKA,EACJC,MACC,sEAEDC,KAAI,SAACC,GAAD,OAAOA,EAAEC,iBACbC,KAAK,KAGH,IAIIP,QCOA3C,EAdqB,SAACkB,GACnC,IAAMiC,EAAS,CACbC,OAAQlC,EAAMR,MAAMR,MAGtB,OACE,qCACE,qBAAKU,UAAU,QAAQyC,wBAAyBF,IAEhD,gCAAQjC,EAAMR,MAAMP,UCYXmD,G,MAhB6B,SAACpC,GAC3C,OACE,eAAC,IAAD,CACEI,GAAE,mBAAcqB,EAAKC,MAAM1B,EAAMR,MAAMT,OACvCW,UAAU,aAFZ,UAIE,qBAAKA,UAAU,oBAAf,SACE,cAAC,EAAD,CAAOF,MAAOQ,EAAMR,UAEtB,qBAAKE,UAAU,sBAAf,SACE,oBAAIA,UAAU,mBAAd,SAAkCM,EAAMR,MAAMT,cCqBvCsD,G,MAjCmC,SAACrC,GACjD,IAYMsC,GAVFtC,EAAMuC,KAAKC,OAAS,EACLxC,EAAMX,OACpBoD,QACAlD,QAAO,SAACC,GAAD,OACNA,EAAMT,KAAKgD,cAAcW,SAAS1C,EAAMuC,KAAKR,kBAGhC/B,EAAMX,OAAOoD,SAGHZ,KAAI,SAACrC,GAAD,OAC/B,qBAAsBE,UAAU,kBAAhC,SACE,cAAC,EAAD,CAAWF,MAAOA,KADVA,EAAMT,SAKlB,OACE,qCACE,qBAAKW,UAAU,iBAAf,SAAiC4C,IAEf,IAAjBA,EAAME,QACL,oBAAG9C,UAAU,cAAb,sCAC4B,IAC1B,uBAAMA,UAAU,cAAhB,cAAgCM,EAAMuC,KAAtC,eCrBKI,G,MARiB,SAAC3C,GAC/B,OACE,qBAAKN,UAAS,cAASM,EAAMN,UAAYM,EAAMN,UAAY,IAA3D,SACGM,EAAM4C,aCgBEC,G,MAhBqC,SAAC7C,GACnD,IAAM8C,EAAa9C,EAAMX,OAAOwC,KAAI,SAACrC,GAAD,OAClC,cAAC,EAAD,CAA4BA,MAAOA,GAAnBA,EAAMT,SAGxB,OACE,cAAC,EAAD,CAAKW,UAAU,QAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,cAAd,4BAEA,qBAAKA,UAAU,wBAAf,SAAwCoD,WCUjCC,G,MAlByB,SAAC/C,GACvC,OACE,0BAASN,UAAU,UAAnB,UACE,eAAC,EAAD,CAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,iBAAd,SAAgCM,EAAMR,MAAMT,OAE5C,qBAAKW,UAAU,iBAAf,SACE,cAAC,EAAD,CAAOF,MAAOQ,EAAMR,aAIvBQ,EAAMgD,cAAcR,OAAS,GAC5B,cAAC,EAAD,CAAenD,OAAQW,EAAMgD,qB,yBCyBtBC,G,MAzC+C,SAACjD,GAC7D,IAAMkD,EAAiBC,iBAAuB,MAe9C,OACE,sBAAKzD,UAAU,oBAAf,UACE,cAAC,kBAAD,CAAiBQ,KAAMF,EAAME,KAAMkD,OAfvC,SAAyBlD,EAAcmD,GACjCH,EAAeI,UACjBJ,EAAeI,QAAQC,YAAcF,EACjC,UACA,iBACJH,EAAeI,QAAQE,UAAUC,IAAI,aAErCC,YAAW,WACTR,EAAeI,QAASE,UAAUG,OAAO,eACxC,OAMH,SACE,yBAAQjE,UAAU,4BAAlB,8BAEE,sBACEkE,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YAJV,UAME,sBAAMC,EAAE,6JACR,sBAAMA,EAAE,iMAKd,qBACEtE,UAAU,kCACVuE,IAAKf,SCpBEgB,G,MAZyB,SAAClE,GACvC,OACE,sBAAKN,UAAS,mBAAcM,EAAMN,UAAYM,EAAMN,UAAY,IAAhE,UACE,qBAAKA,UAAU,iBAAf,SACE,cAAC,IAAD,CAAiBC,KAAMwE,IAActE,KAAK,SAG5C,qBAAKH,UAAU,oBAAf,SAAoCM,EAAME,YC8BjCkE,G,YAjCiC,SAACpE,GAC/C,IAAMqE,EAAUlB,iBAAoB,MAMpC,OAJAjF,qBAAU,WACRoG,IAAMC,iBAAiBF,EAAQf,YAI/B,sBAAK5D,UAAU,UAAf,UACE,oBAAIA,UAAU,iBAAd,SAAgCM,EAAMwE,QAErCxE,EAAMR,OACLQ,EAAMR,MAAML,yBACI,cAAhBa,EAAMwE,OACJ,cAAC,EAAD,CACE9E,UAAU,QACVQ,KAAK,mHAIX,sBAAKR,UAAU,iBAAf,UACE,cAAC,EAAD,CAAuBQ,KAAMF,EAAMyE,OAEnC,8BACE,sBAAMR,IAAKI,EAAS3E,UAAS,mBAAcM,EAAM0E,eAAjD,SACG1E,EAAMyE,iBCNJE,EAzB2B,SAAC3E,GACzC,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CACER,MAAOQ,EAAMR,MACbiF,KAAMzE,EAAMR,MAAMR,KAClBwF,MAAM,OACNE,cAAc,WAEhB,cAAC,EAAD,CACElF,MAAOQ,EAAMR,MACbiF,KAAMzE,EAAMR,MAAMP,IAClBuF,MAAM,MACNE,cAAc,QAEhB,cAAC,EAAD,CACElF,MAAOQ,EAAMR,MACbiF,KAAMzE,EAAMR,MAAMN,KAClBsF,MAAM,YACNE,cAAc,YCyBPE,G,MArCuB,SAAC5E,GAAW,IACxC6E,EAAOC,cAAPD,GADuC,EAErBE,mBAAuB,MAFF,mBAExCvF,EAFwC,KAEjCwF,EAFiC,KAI/C9G,qBAAU,WACR,IAAM+G,EAAejF,EAAMX,OAAO6F,MAAK,SAACC,GAAD,OAAO1D,EAAKC,MAAMyD,EAAEpG,QAAU8F,KAEjEI,GACFD,EAASC,KAEV,CAACjF,EAAMX,OAAQwF,IAElB,IAAI7B,EAAyB,GAM7B,OAJIxD,IACFwD,EAAgBxD,EAAM4F,iBAAiBpF,EAAMX,SAI7C,sBAAKK,UAAU,SAAf,UACE,cAAC,EAAD,CACEA,UAAU,iBACVU,GAAG,WACHF,KAAK,kBACLG,OAAQgF,MAGT7F,GACC,sBAAKE,UAAU,kBAAf,UACE,cAAC,EAAD,CAASF,MAAOA,EAAOwD,cAAeA,IACtC,cAAC,EAAD,CAAUxD,MAAOA,YCVZ8F,G,MA1BiC,SAACtF,GAK/C,OACE,cAAC,EAAD,CAAKN,UAAU,SAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,uBACEmF,GAAG,SACHnF,UAAU,oBACV6F,YAAY,qBACZnE,KAAK,SACLrC,KAAK,SACLyG,aAAa,MACbC,MAAOzF,EAAMuC,KACbmD,SAfR,SAAsBC,GACpB3F,EAAM4F,aAAaD,EAAMnF,OAAOiF,UAgB5B,uBAAO/F,UAAU,sBAAsBmG,QAAQ,SAA/C,uCCqBOC,EArCyB,SAAC9F,GAAW,IAC1C+F,EAASC,cAATD,KADyC,EAEbhB,mBAAS,IAFI,mBAE1CkB,EAF0C,KAE9BC,EAF8B,KAQjD,OACE,mCACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAOnF,OAAK,EAACgF,KAAMA,EAAnB,UACE,oBAAIrG,UAAU,cAAd,qBAEA,cAAC,EAAD,CACE6C,KAAM0D,EACNL,aAZV,SAAgCrD,GAC9B2D,EAAc3D,MAcR,qBAAK7C,UAAU,UAAf,SACE,cAAC,EAAD,CAAc6C,KAAM0D,EAAY5G,OAAQW,EAAMX,cAIlD,cAAC,IAAD,CACE0G,KAAK,eACLnD,SAAU,cAAC,EAAD,CAAQvD,OAAQW,EAAMX,WAGlC,cAAC,IAAD,CAAO0G,KAAK,IAAZ,SACE,cAAC,IAAD,CAAU3F,GAAI2F,Y,QCXTI,G,MAtB2C,SAACnG,GAKzD,OACE,sBAAKN,UAAU,WAAf,UACE,uBACEA,UAAU,kBACV0B,KAAK,WACLrC,KAAMiB,EAAMR,MAAMT,KAClB8F,GAAI7E,EAAMR,MAAMT,KAChB2G,SAXN,SAAsBC,GACpB3F,EAAM0F,SAAS1F,EAAMR,MAAOmG,EAAMnF,OAAO4F,YAYvC,wBAAO1G,UAAU,kBAAkBmG,QAAS7F,EAAMR,MAAMT,KAAxD,UACE,sBAAMW,UAAU,uBAChB,sBAAMA,UAAU,iBAAhB,SAAkCM,EAAMR,MAAMT,eCcvCsH,EA7BuC,SAACrG,GAoBrD,OACE,cAAC,EAAD,CACEN,UAAU,QACVQ,KAAI,mBAAcF,EAAMsG,YACxBrG,QARJ,YAfA,SACEsG,EACAC,EACAC,GAEA,IAAMC,EAAIC,SAASC,cAAc,KAC3BC,EAAO,IAAIC,KAAK,CAACP,GAAU,CAAEnF,KAAMqF,IAEzCC,EAAEhG,KAAOqG,IAAIC,gBAAgBH,GAC7BH,EAAEO,SAAWT,EACbE,EAAEQ,QAEFH,IAAII,gBAAgBT,EAAEhG,MAItB0G,CAAepH,EAAMuG,QAASvG,EAAMwG,SAAUxG,EAAMyG,iBCpB3CxH,EAAG,qJCmEDoI,EA3D2C,SAACrH,GACzD,IAAMhB,EAAOgB,EAAMX,OAAOwC,KAAI,SAACrC,GAAD,OAAWA,EAAMR,QACzCC,EAAMe,EAAMX,OAAOwC,KAAI,SAACrC,GAAD,OAAWA,EAAMP,OACxCC,EAAOc,EAAMX,OAAOwC,KAAI,SAACrC,GAAD,OAAWA,EAAMN,QAEzCoI,EAAcC,6JAAqBvI,EAAKgD,KAAK,QAC7CwF,EAAaC,EAAa,KAAOxI,EAAI+C,KAAK,QAC1C0F,EAAcD,EAAa,KAAOvI,EAAK8C,KAAK,QAElD,OACE,mCACGhD,EAAKwD,OAAS,GACb,qCACE,eAAC,EAAD,CAAK9C,UAAU,QAAf,UACE,cAAC,EAAD,CACE8E,MAAM,OACNC,KAAM6C,EACN5C,cAAc,WAGhB,cAAC,EAAD,CACE4B,WAAW,OACXC,QAASe,EACTd,SAAS,kBACTC,YAAY,iBAIhB,eAAC,EAAD,CAAK/G,UAAU,QAAf,UACE,cAAC,EAAD,CAAa8E,MAAM,MAAMC,KAAM+C,EAAY9C,cAAc,QAEzD,cAAC,EAAD,CACE4B,WAAW,MACXC,QAASiB,EACThB,SAAS,iBACTC,YAAY,gBAIhB,eAAC,EAAD,CAAK/G,UAAU,QAAf,UACE,cAAC,EAAD,CACE8E,MAAM,YACNC,KAAMiD,EACNhD,cAAc,QAGhB,cAAC,EAAD,CACE4B,WAAW,YACXC,QAASmB,EACTlB,SAAS,kBACTC,YAAY,uBCLXkB,I,MAhD2B,SAAC3H,GAAW,IAAD,EACP+E,mBAAkB,IADX,mBAC5C6C,EAD4C,KAC5BC,EAD4B,KAGnD,SAASC,EAAqBtI,EAAciG,GAC1C,IAAMsC,EAAgBH,EAAeI,WACnC,SAACC,GAAD,OAAmBA,EAAclJ,OAASS,EAAMT,QAGlD,GAAI0G,EAAO,CACT,IAAuB,IAAnBsC,EAAsB,OAE1BF,EAAkB,GAAD,mBAAKD,GAAL,CAAqBpI,SACjC,CACL,IAAuB,IAAnBuI,EAAsB,OAE1BF,EACED,EAAerI,QACb,SAAC0I,GAAD,OAAmBA,EAAclJ,OAASS,EAAMT,UAMxD,IAAMmJ,EAAalI,EAAMX,OAAOwC,KAAI,SAACrC,GAAD,OAClC,cAAC,EAAD,CAEEA,MAAOA,EACPkG,SAAUoC,GAFLtI,EAAMT,SAMf,OACE,sBAAKW,UAAU,WAAf,UACE,oBAAIA,UAAU,cAAd,sBAEA,eAAC,EAAD,WACE,wCAEA,qBAAKA,UAAU,uBAAf,SAAuCwI,OAGzC,qBAAKxI,UAAU,qBAAf,SACE,cAAC,EAAD,CAAkBL,OAAQuI,WCTnBO,I,MAlCqB,SAACnI,GACnC,OACE,sBAAKN,UAAU,QAAf,UACE,uCAEA,eAAC,EAAD,WACE,qBAAKA,UAAU,eAAf,SAA+BM,EAAMX,OAAOmD,SAE5C,oIAE8B,4CAF9B,OAEwD,IACtD,2CAHF,wDAIO,0CAJP,QAI+B,8CAJ/B,wDAQA,6IAEyC,IACvC,cAAC,IAAD,CAAMpC,GAAG,YAAT,sBAHF,4GAOA,uBAEA,qCACM,cAAC,IAAD,CAAMA,GAAG,WAAT,qBADN,sBAC4D,IACzDJ,EAAMX,OAAOmD,OAFhB,sBCgCO4F,I,MA9DU,WACvB,OACE,wBAAQ1I,UAAU,SAAlB,SACE,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,cAAC,IAAD,CACEoB,SAAO,EACPC,OAAK,EACLX,GAAG,SACHV,UAAU,eACVsB,gBAAgB,YALlB,mBASA,cAAC,IAAD,CACEF,SAAO,EACPC,OAAK,EACLX,GAAG,WACHV,UAAU,eACVsB,gBAAgB,YALlB,qBASA,cAAC,IAAD,CACEF,SAAO,EACPC,OAAK,EACLX,GAAG,YACHV,UAAU,eACVsB,gBAAgB,YALlB,yBAWF,sBAAKtB,UAAU,iBAAf,UACE,sEAEA,sBAAKA,UAAU,uBAAf,UACE,mBACEgB,KAAK,4CACLF,OAAO,SACPC,IAAI,aACJf,UAAU,sBAJZ,SAME,cAAC,IAAD,CAAiBC,KAAM0I,QAGzB,mBACE3H,KAAK,iCACLF,OAAO,SACPC,IAAI,aACJf,UAAU,sBAJZ,SAME,cAAC,IAAD,CAAiBC,KAAM2I,qBCsBtBC,GAlEO,WAAO,IAAD,EACgBxD,oBAAS,GADzB,mBACnB5D,EADmB,KACJqH,EADI,OAEEzD,mBAAkB,IAFpB,mBAEnB1F,EAFmB,KAEXoJ,EAFW,OAGI1D,oBAAS,GAHb,mBAGnB2D,EAHmB,KAGVC,EAHU,iDAS1B,gCAAAjC,EAAA,6DACEiC,GAAW,GADb,kBAI2BC,MAAM,qBAJjC,cAIUC,EAJV,gBAKuBA,EAASC,OALhC,OAKUA,EALV,OAMUzJ,EAAS0J,YAAajK,EAAOgK,GAEnCL,EAAUpJ,GARd,kDAUI2J,QAAQC,MAAM,uCAAd,MAVJ,yBAYIN,GAAW,GAZf,8EAT0B,sBAyB1B,SAASO,IACPV,GAAkBrH,GAGpB,OAxBAjD,qBAAU,YALgB,mCAMxBiL,KACC,IAuBD,qCACGT,GAAW,cAAC,EAAD,IAEZ,cAAC,EAAD,CACErH,iBAAkB6H,EAClB/H,cAAeA,IAEjB,cAAC,EAAD,CACEI,OAAQJ,EACRK,QAAS0H,IAGX,+BACE,qBAAKxJ,UAAU,UAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqB,OAAK,EAACgF,KAAK,SAAlB,SACE,cAAC,GAAD,CAAO1G,OAAQA,MAEjB,cAAC,IAAD,CAAO0G,KAAK,WAAZ,SACE,cAAC,EAAD,CAAS1G,OAAQA,MAEnB,cAAC,IAAD,CAAO0B,OAAK,EAACgF,KAAK,YAAlB,SACE,cAAC,GAAD,CAAU1G,OAAQA,MAEpB,cAAC,IAAD,CAAO0G,KAAK,IAAZ,SACE,cAAC,IAAD,CAAU3F,GAAG,sBAMrB,cAAC,GAAD,QCpENgJ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,IAAD,WACE,cAACvL,EAAD,IACA,cAAC,GAAD,SAGJ4I,SAAS4C,eAAe,SAM1BlL,M","file":"static/js/main.03eaadaa.chunk.js","sourcesContent":["import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","class Shape {\n  constructor(\n    public name: string,\n    public html: string,\n    public css: string,\n    public scss: string,\n    public scssMixinUsesMultiplier: boolean = false,\n    public group?: string\n  ) {}\n\n  getRelatedShapes(shapes: Shape[]): Shape[] {\n    if (!this.group) return [];\n\n    return shapes.filter((shape) => {\n      return (\n        shape.group && shape.group === this.group && shape.name !== this.name\n      );\n    });\n  }\n}\n\nexport default Shape;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nimport './Loader.scss';\n\nconst Loader: React.FC = () => {\n  return (\n    <div className='loader'>\n      <FontAwesomeIcon icon={faSpinner} size='5x' pulse={true} />\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './Button.scss';\n\ninterface ButtonRouterLinkProps {\n  text: string;\n  to: string;\n  faIcon?: any;\n  faIconSize?: string;\n  className?: string;\n}\ninterface ButtonLinkProps {\n  text: string;\n  url: string;\n  target?: '_self' | '_blank';\n  faIcon?: any;\n  faIconSize?: string;\n  className?: string;\n}\n\ninterface ButtonProps {\n  text: string;\n  onClick: () => void;\n  className?: string;\n}\n\nexport const Button: React.FC<ButtonProps> = (props) => {\n  return (\n    <button\n      className={`button ${props.className ? props.className : ''}`}\n      onClick={props.onClick}\n    >\n      {props.text}\n    </button>\n  );\n};\n\nexport const ButtonRouterLink: React.FC<ButtonRouterLinkProps> = (props) => {\n  return (\n    <Link\n      to={props.to}\n      className={`button ${props.className ? props.className : ''}`}\n    >\n      {props.text}\n      {props.faIcon ? <FontAwesomeIcon icon={props.faIcon} /> : ''}\n    </Link>\n  );\n};\n\nexport const ButtonLink: React.FC<ButtonLinkProps> = (props) => {\n  const conditionalAttributes: { rel?: string } = {};\n\n  if (props.target && props.target === '_blank') {\n    conditionalAttributes.rel = 'noreferrer';\n  }\n\n  return (\n    <a\n      className={`button ${props.className ? props.className : ''}`}\n      href={props.url}\n      target={props.target}\n      {...conditionalAttributes}\n    >\n      {props.text}\n      {props.faIcon ? <FontAwesomeIcon icon={props.faIcon} /> : ''}\n    </a>\n  );\n};\n","import React from 'react';\n\nimport './Logo.scss';\n\nconst Logo: React.FC = () => {\n  return (\n    <span className='logo'>\n      <span className='logo__css'>CSS</span>\n      <span className='logo__shapes'>Shapes</span>\n    </span>\n  );\n};\n\nexport default Logo;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\n\nimport { ButtonLink } from '../Button/Button';\n\nimport Logo from '../Logo/Logo';\n\nimport './Hamburgers.css';\nimport './Navigation.scss';\n\ninterface NavigationProps {\n  onHamburgerClick: () => void;\n  mobileNavOpen: boolean;\n}\n\nconst Navigation: React.FC<NavigationProps> = (props) => {\n  return (\n    <>\n      <nav className='navigation'>\n        <NavLink replace to='/library' className='navigation__logo'>\n          <Logo />\n        </NavLink>\n\n        <div className='navigation__main'>\n          <NavLink\n            replace\n            exact\n            to='/about'\n            className='navigation__link'\n            activeClassName='is-active'\n          >\n            About\n          </NavLink>\n          <NavLink\n            replace\n            to='/library'\n            className='navigation__link'\n            activeClassName='is-active'\n          >\n            Library\n          </NavLink>\n          <NavLink\n            replace\n            exact\n            to='/download'\n            className='navigation__link'\n            activeClassName='is-active'\n          >\n            Download\n          </NavLink>\n        </div>\n\n        <div className='navigation__right'>\n          <ButtonLink\n            text='View on GitHub'\n            url='https://github.com/liamsnowdon/css-shapes'\n            target='_blank'\n            faIcon={faGithub}\n            faIconSize='2x'\n          />\n        </div>\n\n        <div className='navigation__hamburger'>\n          <button\n            className={`hamburger hamburger--slider ${\n              props.mobileNavOpen ? 'is-active' : ''\n            }`}\n            type='button'\n            onClick={props.onHamburgerClick}\n          >\n            <span className='hamburger-box'>\n              <span className='hamburger-inner'></span>\n            </span>\n          </button>\n        </div>\n      </nav>\n    </>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\n\nimport './MobileNavigationSlider.scss';\n\nimport { ButtonLink } from '../Button/Button';\nimport Logo from '../Logo/Logo';\n\ninterface MobileNavigationProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nconst MobileNavigation: React.FC<MobileNavigationProps> = (props) => {\n  return (\n    <>\n      <div\n        className={`mobile-navigation-overlay ${\n          props.isOpen ? 'is-active' : ''\n        }`}\n      />\n\n      <nav className={`mobile-navigation ${props.isOpen ? 'is-active' : ''}`}>\n        <div className='mobile-navigation__header'>\n          <Logo />\n\n          <button\n            className='mobile-navigation__cross hamburger hamburger--slider is-active'\n            type='button'\n            onClick={props.onClose}\n          >\n            <span className='hamburger-box'>\n              <span className='hamburger-inner'></span>\n            </span>\n          </button>\n        </div>\n\n        <ul className='mobile-navigation__items'>\n          <li className='mobile-navigation__item'>\n            <NavLink\n              replace\n              exact\n              to='/about'\n              className='mobile-navigation__link'\n              activeClassName='is-active'\n              onClick={props.onClose}\n            >\n              About\n            </NavLink>\n          </li>\n\n          <li className='mobile-navigation__item'>\n            <NavLink\n              replace\n              exact\n              to='/library'\n              className='mobile-navigation__link'\n              activeClassName='is-active'\n              onClick={props.onClose}\n            >\n              Library\n            </NavLink>\n          </li>\n\n          <li className='mobile-navigation__item'>\n            <NavLink\n              replace\n              exact\n              to='/download'\n              className='mobile-navigation__link'\n              activeClassName='is-active'\n              onClick={props.onClose}\n            >\n              Download\n            </NavLink>\n          </li>\n        </ul>\n\n        <hr className='mobile-navigation__separator'></hr>\n\n        <div className='mobile-navigation__buttons'>\n          <ButtonLink\n            text='View on GitHub'\n            url='https://github.com/liamsnowdon/css-shapes'\n            target='_blank'\n            faIcon={faGithub}\n            faIconSize='2x'\n          />\n        </div>\n      </nav>\n    </>\n  );\n};\n\nexport default MobileNavigation;\n","class Case {\n  static kebab = (str: string) => {\n    if (str) {\n      return str\n        .match(\n          /[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g\n        )!\n        .map((x) => x.toLowerCase())\n        .join('-');\n    }\n\n    return '';\n  };\n}\n\nexport default Case;\n","import React from 'react';\n\nimport ShapeClass from '../../models/Shape';\n\ninterface ShapeProps {\n  shape: ShapeClass;\n}\n\nconst Shape: React.FC<ShapeProps> = (props) => {\n  const markup = {\n    __html: props.shape.html,\n  };\n\n  return (\n    <>\n      <div className='shape' dangerouslySetInnerHTML={markup}></div>\n\n      <style>{props.shape.css}</style>\n    </>\n  );\n};\n\nexport default Shape;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Case from '../../util/Case';\nimport ShapeClass from '../../models/Shape';\nimport Shape from '../Shape/Shape';\n\nimport './ShapeCard.scss';\n\ninterface ShapeCardProps {\n  shape: ShapeClass;\n}\n\nconst ShapeCard: React.FC<ShapeCardProps> = (props) => {\n  return (\n    <Link\n      to={`/library/${Case.kebab(props.shape.name)}`}\n      className='shape-card'\n    >\n      <div className='shape-card__shape'>\n        <Shape shape={props.shape} />\n      </div>\n      <div className='shape-card__content'>\n        <h4 className='shape-card__name'>{props.shape.name}</h4>\n      </div>\n    </Link>\n  );\n};\n\nexport default ShapeCard;\n","import React from 'react';\nimport Shape from '../../models/Shape';\nimport ShapeCard from '../ShapeCard/ShapeCard';\n\nimport './LibraryCards.scss';\n\ninterface LibraryCardsProps {\n  term: string;\n  shapes: Shape[];\n}\n\nconst LibraryCards: React.FC<LibraryCardsProps> = (props) => {\n  let filteredShapes;\n\n  if (props.term.length > 2) {\n    filteredShapes = props.shapes\n      .slice()\n      .filter((shape) =>\n        shape.name.toLowerCase().includes(props.term.toLowerCase())\n      );\n  } else {\n    filteredShapes = props.shapes.slice();\n  }\n\n  const cards = filteredShapes.map((shape) => (\n    <div key={shape.name} className='library__column'>\n      <ShapeCard shape={shape} />\n    </div>\n  ));\n\n  return (\n    <>\n      <div className='library__cards'>{cards}</div>\n\n      {cards.length === 0 && (\n        <p className='text-center'>\n          No shapes found with term{' '}\n          <span className='bold italic'>\"{props.term}\"</span>\n        </p>\n      )}\n    </>\n  );\n};\n\nexport default LibraryCards;\n","import React from 'react';\n\nimport './Pod.scss';\n\ninterface PodProps {\n  className?: string;\n}\n\nconst Pod: React.FC<PodProps> = (props) => {\n  return (\n    <div className={`pod ${props.className ? props.className : ''}`}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Pod;\n","import React from 'react';\nimport Shape from '../../models/Shape';\nimport Pod from '../Pod/Pod';\nimport ShapeCard from '../ShapeCard/ShapeCard';\n\nimport './RelatedShapes.scss';\n\ninterface RelatedShapesProps {\n  shapes: Shape[];\n}\n\nconst RelatedShapes: React.FC<RelatedShapesProps> = (props) => {\n  const shapeCards = props.shapes.map((shape) => (\n    <ShapeCard key={shape.name} shape={shape} />\n  ));\n\n  return (\n    <Pod className='mt-40'>\n      <div className='related-shapes'>\n        <h3 className='text-center'>Related Shapes</h3>\n\n        <div className='related-shapes__inner'>{shapeCards}</div>\n      </div>\n    </Pod>\n  );\n};\n\nexport default RelatedShapes;\n","import React from 'react';\nimport ShapeClass from '../../models/Shape';\nimport RelatedShapes from './RelatedShapes';\nimport Pod from '../Pod/Pod';\nimport Shape from '../Shape/Shape';\n\nimport './Preview.scss';\n\ninterface PreviewProps {\n  shape: ShapeClass;\n  relatedShapes: ShapeClass[];\n}\n\nconst Preview: React.FC<PreviewProps> = (props) => {\n  return (\n    <section className='preview'>\n      <Pod className='text-center'>\n        <h1 className='preview__title'>{props.shape.name}</h1>\n\n        <div className='preview__shape'>\n          <Shape shape={props.shape} />\n        </div>\n      </Pod>\n\n      {props.relatedShapes.length > 0 && (\n        <RelatedShapes shapes={props.relatedShapes} />\n      )}\n    </section>\n  );\n};\n\nexport default Preview;\n","import React, { useRef } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nimport './CopyToClipboardButton.scss';\n\ninterface CopyToClipboardProps {\n  text: string;\n}\n\nconst CopyToClipboardButton: React.FC<CopyToClipboardProps> = (props) => {\n  const notificationEl = useRef<HTMLDivElement>(null);\n\n  function handleCopyEvent(text: string, result: boolean): void {\n    if (notificationEl.current) {\n      notificationEl.current.textContent = result\n        ? 'Copied!'\n        : 'Error copying.';\n      notificationEl.current.classList.add('is-active');\n\n      setTimeout(() => {\n        notificationEl.current!.classList.remove('is-active');\n      }, 1000);\n    }\n  }\n\n  return (\n    <div className='copy-to-clipboard'>\n      <CopyToClipboard text={props.text} onCopy={handleCopyEvent}>\n        <button className='copy-to-clipboard__button'>\n          Copy to clipboard\n          <svg\n            xmlns='http://www.w3.org/2000/svg'\n            width='16'\n            height='16'\n            viewBox='0 0 16 16'\n          >\n            <path d='M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1V14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3.5a1 1 0 0 1 1-1h1v-1z' />\n            <path d='M9.5 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h3zm-3-1A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3z' />\n          </svg>\n        </button>\n      </CopyToClipboard>\n\n      <div\n        className='copy-to-clipboard__notification'\n        ref={notificationEl}\n      ></div>\n    </div>\n  );\n};\n\nexport default CopyToClipboardButton;\n","import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\n\nimport './InfoBox.scss';\n\ninterface InfoBoxProps {\n  text: string;\n  className?: string;\n}\n\nconst InfoBox: React.FC<InfoBoxProps> = (props) => {\n  return (\n    <div className={`info-box ${props.className ? props.className : ''}`}>\n      <div className='info-box__icon'>\n        <FontAwesomeIcon icon={faInfoCircle} size='2x' />\n      </div>\n\n      <div className='info-box__content'>{props.text}</div>\n    </div>\n  );\n};\n\nexport default InfoBox;\n","import React, { useEffect, useRef } from 'react';\nimport Prism from 'prismjs';\nimport CopyToClipboardButton from '../CopyToClipboardButton/CopyToClipboardButton';\nimport Warning from '../InfoBox/InfoBox';\nimport Shape from '../../models/Shape';\n\nimport './Prism.css';\nimport './CodeSnippet.scss';\n\ninterface CodeSnippetProps {\n  shape?: Shape;\n  code: string;\n  title: string;\n  prismLanguage: string;\n}\n\nconst CodeSnippet: React.FC<CodeSnippetProps> = (props) => {\n  const prismEl = useRef<HTMLElement>(null);\n\n  useEffect(() => {\n    Prism.highlightElement(prismEl.current!);\n  });\n\n  return (\n    <div className='snippet'>\n      <h3 className='snippet__title'>{props.title}</h3>\n\n      {props.shape &&\n        props.shape.scssMixinUsesMultiplier &&\n        props.title === 'Sass/SCSS' && (\n          <Warning\n            className='mb-20'\n            text=\"Since this shape's properties would not normally be edited individually, this mixin uses a multiplier instead.\"\n          />\n        )}\n\n      <div className='snippet__inner'>\n        <CopyToClipboardButton text={props.code} />\n\n        <pre>\n          <code ref={prismEl} className={`language-${props.prismLanguage}`}>\n            {props.code}\n          </code>\n        </pre>\n      </div>\n    </div>\n  );\n};\n\nexport default CodeSnippet;\n","import React from 'react';\nimport Shape from '../../models/Shape';\n\nimport CodeSnippet from '../CodeSnippet/CodeSnippet';\nimport Pod from '../Pod/Pod';\n\ninterface SnippetsProps {\n  shape: Shape;\n}\n\nconst Snippets: React.FC<SnippetsProps> = (props) => {\n  return (\n    <Pod>\n      <CodeSnippet\n        shape={props.shape}\n        code={props.shape.html}\n        title='HTML'\n        prismLanguage='markup'\n      />\n      <CodeSnippet\n        shape={props.shape}\n        code={props.shape.css}\n        title='CSS'\n        prismLanguage='css'\n      />\n      <CodeSnippet\n        shape={props.shape}\n        code={props.shape.scss}\n        title='Sass/SCSS'\n        prismLanguage='css'\n      />\n    </Pod>\n  );\n};\n\nexport default Snippets;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Case from '../../util/Case';\nimport Preview from '../Preview/Preview';\nimport Snippets from '../Snippets/Snippets';\nimport { ButtonRouterLink } from '../Button/Button';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\n\nimport Shape from '../../models/Shape';\n\nimport './Panels.scss';\n\ninterface PanelsProps {\n  shapes: Shape[];\n}\n\nconst Panels: React.FC<PanelsProps> = (props) => {\n  const { id } = useParams<{ id: string }>();\n  const [shape, setShape] = useState<Shape | null>(null);\n\n  useEffect(() => {\n    const matchedShape = props.shapes.find((s) => Case.kebab(s.name) === id);\n\n    if (matchedShape) {\n      setShape(matchedShape);\n    }\n  }, [props.shapes, id]);\n\n  let relatedShapes: Shape[] = [];\n\n  if (shape) {\n    relatedShapes = shape.getRelatedShapes(props.shapes);\n  }\n\n  return (\n    <div className='panels'>\n      <ButtonRouterLink\n        className='panels__button'\n        to='/library'\n        text='Back to library'\n        faIcon={faArrowLeft}\n      />\n\n      {shape && (\n        <div className='panels__content'>\n          <Preview shape={shape} relatedShapes={relatedShapes} />\n          <Snippets shape={shape} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Panels;\n","import React from 'react';\n\nimport Pod from '../Pod/Pod';\n\nimport './SearchInput.scss';\n\ninterface SearchInputProps {\n  term: string;\n  onTermChange: (term: string) => void;\n}\n\nconst SearchInput: React.FC<SearchInputProps> = (props) => {\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    props.onTermChange(event.target.value);\n  }\n\n  return (\n    <Pod className='search'>\n      <div className='search__input'>\n        <input\n          id='search'\n          className='search__input-box'\n          placeholder='Search for a shape'\n          type='search'\n          name='search'\n          autoComplete='off'\n          value={props.term}\n          onChange={handleChange}\n        />\n        <label className='search__input-label' htmlFor='search'>\n          Search for a shape\n        </label>\n      </div>\n    </Pod>\n  );\n};\n\nexport default SearchInput;\n","import React, { useState } from 'react';\nimport { Switch, Route, useRouteMatch, Redirect } from 'react-router-dom';\n\nimport Shape from '../../models/Shape';\n\nimport LibraryCards from './LibraryCards';\nimport Panels from '../Panels/Panels';\nimport SearchInput from './SearchInput';\n\ninterface LibraryProps {\n  shapes: Shape[];\n}\n\nconst Library: React.FC<LibraryProps> = (props) => {\n  const { path } = useRouteMatch();\n  const [searchTerm, setSearchTerm] = useState('');\n\n  function handleSearchTermChange(term: string) {\n    setSearchTerm(term);\n  }\n\n  return (\n    <>\n      <Switch>\n        <Route exact path={path}>\n          <h1 className='text-center'>Library</h1>\n\n          <SearchInput\n            term={searchTerm}\n            onTermChange={handleSearchTermChange}\n          />\n\n          <div className='library'>\n            <LibraryCards term={searchTerm} shapes={props.shapes} />\n          </div>\n        </Route>\n\n        <Route\n          path='/library/:id'\n          children={<Panels shapes={props.shapes} />}\n        ></Route>\n\n        <Route path='*'>\n          <Redirect to={path} />\n        </Route>\n      </Switch>\n    </>\n  );\n};\n\nexport default Library;\n","import React from 'react';\nimport Shape from '../../models/Shape';\n\nimport './DownloadCheckbox.scss';\n\ninterface DownloadCheckboxProps {\n  shape: Shape;\n  onChange: (shape: Shape, value: boolean) => void;\n}\n\nconst DownloadCheckbox: React.FC<DownloadCheckboxProps> = (props) => {\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    props.onChange(props.shape, event.target.checked);\n  }\n\n  return (\n    <div className='checkbox'>\n      <input\n        className='checkbox__input'\n        type='checkbox'\n        name={props.shape.name}\n        id={props.shape.name}\n        onChange={handleChange}\n      />\n      <label className='checkbox__label' htmlFor={props.shape.name}>\n        <span className='checkbox__checkbox'></span>\n        <span className='checkbox__text'>{props.shape.name}</span>\n      </label>\n    </div>\n  );\n};\n\nexport default DownloadCheckbox;\n","import React from 'react';\n\nimport { Button } from '../Button/Button';\n\ninterface DownloadButtonProps {\n  buttonText: string;\n  content: string;\n  filename: string;\n  contentType: string;\n}\n\nconst DownloadButton: React.FC<DownloadButtonProps> = (props) => {\n  function downloadToFile(\n    content: string,\n    filename: string,\n    contentType: string\n  ) {\n    const a = document.createElement('a');\n    const file = new Blob([content], { type: contentType });\n\n    a.href = URL.createObjectURL(file);\n    a.download = filename;\n    a.click();\n\n    URL.revokeObjectURL(a.href);\n  }\n\n  function handleClick() {\n    downloadToFile(props.content, props.filename, props.contentType);\n  }\n\n  return (\n    <Button\n      className='w-100'\n      text={`Download ${props.buttonText}`}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default DownloadButton;\n","export const html = `<!--\n  CSS Shapes by Liam Snowdon\n\n  Github: https://github.com/liamsnowdon/css-shapes\n  Site: https://liamsnowdon.github.io/css-shapes\n-->\n`;\n\nexport const css = `/* CSS Shapes by Liam Snowdon\n * \n * Github: https://github.com/liamsnowdon/css-shapes\n * Site: https://liamsnowdon.github.io/css-shapes\n */\n`;\n","import React from 'react';\n\nimport Shape from '../../models/Shape';\nimport Pod from '../Pod/Pod';\nimport CodeSnippet from '../CodeSnippet/CodeSnippet';\nimport DownloadButton from './DownloadButton';\n\nimport {\n  html as htmlComment,\n  css as cssComment,\n} from '../../constants/comments';\n\ninterface DownloadSnippetsProps {\n  shapes: Shape[];\n}\n\nconst DownloadSnippets: React.FC<DownloadSnippetsProps> = (props) => {\n  const html = props.shapes.map((shape) => shape.html);\n  const css = props.shapes.map((shape) => shape.css);\n  const scss = props.shapes.map((shape) => shape.scss);\n\n  const htmlSnippet = htmlComment + '\\n' + html.join('\\n\\n');\n  const cssSnippet = cssComment + '\\n' + css.join('\\n\\n');\n  const scssSnippet = cssComment + '\\n' + scss.join('\\n\\n');\n\n  return (\n    <>\n      {html.length > 0 && (\n        <>\n          <Pod className='mt-40'>\n            <CodeSnippet\n              title='HTML'\n              code={htmlSnippet}\n              prismLanguage='markup'\n            />\n\n            <DownloadButton\n              buttonText='HTML'\n              content={htmlSnippet}\n              filename='css-shapes.html'\n              contentType='text/html'\n            />\n          </Pod>\n\n          <Pod className='mt-40'>\n            <CodeSnippet title='CSS' code={cssSnippet} prismLanguage='css' />\n\n            <DownloadButton\n              buttonText='CSS'\n              content={cssSnippet}\n              filename='css-shapes.css'\n              contentType='text/css'\n            />\n          </Pod>\n\n          <Pod className='mt-40'>\n            <CodeSnippet\n              title='Sass/SCSS'\n              code={scssSnippet}\n              prismLanguage='css'\n            />\n\n            <DownloadButton\n              buttonText='Sass/SCSS'\n              content={scssSnippet}\n              filename='css-shapes.scss'\n              contentType='text/scss'\n            />\n          </Pod>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default DownloadSnippets;\n","import React, { useState } from 'react';\n\nimport Shape from '../../models/Shape';\nimport Pod from '../Pod/Pod';\nimport DownloadCheckbox from './DownloadCheckbox';\nimport DownloadSnippets from './DownloadSnippets';\n\nimport './Download.scss';\n\ninterface DownloadProps {\n  shapes: Shape[];\n}\n\nconst Download: React.FC<DownloadProps> = (props) => {\n  const [selectedShapes, setSelectedShapes] = useState<Shape[]>([]);\n\n  function handleCheckboxChange(shape: Shape, value: boolean): void {\n    const existingIndex = selectedShapes.findIndex(\n      (selectedShape) => selectedShape.name === shape.name\n    );\n\n    if (value) {\n      if (existingIndex !== -1) return;\n\n      setSelectedShapes([...selectedShapes, shape]);\n    } else {\n      if (existingIndex === -1) return;\n\n      setSelectedShapes(\n        selectedShapes.filter(\n          (selectedShape) => selectedShape.name !== shape.name\n        )\n      );\n    }\n  }\n\n  const checkboxes = props.shapes.map((shape) => (\n    <DownloadCheckbox\n      key={shape.name}\n      shape={shape}\n      onChange={handleCheckboxChange}\n    />\n  ));\n\n  return (\n    <div className='download'>\n      <h1 className='text-center'>Download</h1>\n\n      <Pod>\n        <h3>Shapes</h3>\n\n        <div className='download__checkboxes'>{checkboxes}</div>\n      </Pod>\n\n      <div className='download__snippets'>\n        <DownloadSnippets shapes={selectedShapes} />\n      </div>\n    </div>\n  );\n};\n\nexport default Download;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Shape from '../../models/Shape';\nimport Pod from '../Pod/Pod';\n\nimport './About.scss';\n\ninterface AboutProps {\n  shapes: Shape[];\n}\n\nconst About: React.FC<AboutProps> = (props) => {\n  return (\n    <div className='about'>\n      <h1>About</h1>\n\n      <Pod>\n        <div className='about__pages'>{props.shapes.length}</div>\n\n        <p>\n          CSS Shapes is a library of shapes that can be created entirely with an\n          HTML element and CSS. Using <code>::before</code> and{' '}\n          <code>::after</code> pseudo-elements in combination with properties\n          like <code>border</code> and <code>box-shadow</code>, a variety of\n          shapes can be rendered on the page.\n        </p>\n\n        <p>\n          Each shape has code snippets to copy and paste the required HTML, CSS\n          and Sass/SCSS to render the shape. The{' '}\n          <Link to='/download'>download</Link> page allows selecting multiple\n          shapes and downloading a stylesheet containing all the rules you need.\n        </p>\n\n        <br />\n\n        <p>\n          The <Link to='/library'>library</Link> currently contains{' '}\n          {props.shapes.length} shapes.\n        </p>\n      </Pod>\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithubSquare, faLinkedin } from '@fortawesome/free-brands-svg-icons';\n\nimport './Footer.scss';\n\nconst Footer: React.FC = () => {\n  return (\n    <footer className='footer'>\n      <div className='footer__main'>\n        <nav className='footer__links'>\n          <NavLink\n            replace\n            exact\n            to='/about'\n            className='footer__link'\n            activeClassName='is-active'\n          >\n            About\n          </NavLink>\n          <NavLink\n            replace\n            exact\n            to='/library'\n            className='footer__link'\n            activeClassName='is-active'\n          >\n            Library\n          </NavLink>\n          <NavLink\n            replace\n            exact\n            to='/download'\n            className='footer__link'\n            activeClassName='is-active'\n          >\n            Download\n          </NavLink>\n        </nav>\n\n        <div className='footer__social'>\n          <h6>CSS Shapes developed by Liam Snowdon</h6>\n\n          <div className='footer__social-links'>\n            <a\n              href='https://www.linkedin.com/in/liam-snowdon/'\n              target='_blank'\n              rel='noreferrer'\n              className='footer__social-link'\n            >\n              <FontAwesomeIcon icon={faLinkedin} />\n            </a>\n\n            <a\n              href='https://github.com/liamsnowdon'\n              target='_blank'\n              rel='noreferrer'\n              className='footer__social-link'\n            >\n              <FontAwesomeIcon icon={faGithubSquare} />\n            </a>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useEffect, useState } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { plainToClass } from 'class-transformer';\n\nimport './scss/app.scss';\n\nimport Shape from './models/Shape';\n\nimport Loader from './components/Loader/Loader';\nimport Navigation from './components/Navigation/Navigation';\nimport MobileNavigationSlider from './components/Navigation/MobileNavigationSlider';\nimport Library from './components/Library/Library';\nimport Download from './components/Download/Download';\nimport About from './components/About/About';\nimport Footer from './components/Footer/Footer';\n\nconst App: React.FC = () => {\n  const [mobileNavOpen, setMobileNavOpen] = useState(false);\n  const [shapes, setShapes] = useState<Shape[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchShapes();\n  }, []);\n\n  async function fetchShapes() {\n    setLoading(true);\n\n    try {\n      const response = await fetch('/data/shapes.json');\n      const json = await response.json();\n      const shapes = plainToClass(Shape, json);\n\n      setShapes(shapes);\n    } catch (error) {\n      console.error('There was a problem fetching shapes.', error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  function handleMobileNavToggle() {\n    setMobileNavOpen(!mobileNavOpen);\n  }\n\n  return (\n    <>\n      {loading && <Loader />}\n\n      <Navigation\n        onHamburgerClick={handleMobileNavToggle}\n        mobileNavOpen={mobileNavOpen}\n      />\n      <MobileNavigationSlider\n        isOpen={mobileNavOpen}\n        onClose={handleMobileNavToggle}\n      />\n\n      <main>\n        <div className='content'>\n          <Switch>\n            <Route exact path='/about'>\n              <About shapes={shapes} />\n            </Route>\n            <Route path='/library'>\n              <Library shapes={shapes} />\n            </Route>\n            <Route exact path='/download'>\n              <Download shapes={shapes} />\n            </Route>\n            <Route path='*'>\n              <Redirect to='/library' />\n            </Route>\n          </Switch>\n        </div>\n      </main>\n\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport ScrollToTop from './components/ScrollToTop/ScrollToTop';\nimport reportWebVitals from './reportWebVitals';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <ScrollToTop />\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}